<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://stairnode.github.io/news/article-38508.htm" />
    <title>Unsafe类学习</title>
        <meta name="description" content="Unfase为我们提供了访问底层的机制，仅供java核心类库使用。 因此普通用户程序无法直接获取其实例，且unsafe的构造方法为私有的，但是我们可以通过反射获取。 1.获取unsafe Unsafe" />
        <link rel="icon" href="/assets/website/img/stairnode/favicon.ico" type="image/x-icon"/>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/animate.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/stairnode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Y08WLH1WBP"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Y08WLH1WBP');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light site-navbar-target" id="ftco-navbar">
        <div class="container">
                        <a class="navbar-brand" href="/">Stair Node</a>
                        <button class="navbar-toggler js-fh5co-nav-toggle fh5co-nav-toggle" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> Menu
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav nav">
                                        <li class="nav-item"><a href="/" class="nav-link"><span>首页</span></a></li>
                                        <li class="nav-item"><a href="/free-nodes/" class="nav-link"><span>免费节点</span></a></li>
                                        <li class="nav-item"><a href="/paid-subscribe/" class="nav-link"><span>推荐机场</span></a></li>
                                        <li class="nav-item"><a href="/news/" class="nav-link"><span>新闻资讯</span></a></li>
                                        <li class="nav-item"><a href="#" class="nav-link"><span>关于</span></a></li>
                    <li class="nav-item"><a href="#" class="nav-link"><span>联系</span></a></li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="hero-wrap hero-wrap-2" style="background-image: url('__ADDON__/img/stairnode/bg_4.jpg');" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="container">
            <div class="row no-gutters slider-text align-items-end justify-content-center">
                <div class="col-md-9 ftco-animate pb-5 text-center">
                    <p class="breadcrumbs">
                        <span class="mr-2"><a href="/">首页 <i class="fa fa-chevron-right"></i></a></span> 
                        <span class="mr-2"><a href="/news/">新闻资讯 <i class="fa fa-chevron-right"></i></a></span> 
                        <span>正文</span>
                    </p>
                    <h1 class="mb-0 bread">Unsafe类学习</h1>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-about ftco-section ftco-no-pt ftco-no-pb my-5" id="about-section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night-eighties"> </h1> <p>Unfase为我们提供了访问底层的机制，仅供java核心类库使用。</p> <p>因此普通用户程序无法直接获取其实例，且unsafe的构造方法为私有的，但是我们可以通过反射获取。</p> <h3><a id="1unsafe_8" rel="nofollow"></a>1.获取unsafe</h3> <p>Unsafe有一个getUnsafe()方法可以获取实例：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@CallerSensitive</span><span class="token keyword">public</span><span class="token keyword">static</span> Unsafe<span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Class<span class="token class-name">var0</span><span class="token operator">=</span> Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>VM<span class="token punctuation">.</span><span class="token function">isSystemDomainLoader</span><span class="token punctuation">(</span>var0<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">SecurityException</span><span class="token punctuation">(</span><span class="token string">"Unsafe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> theUnsafe<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>其返回的是thUnsafe，<code>private static final Unsafe theUnsafe;</code>，因此我们可以反射获取该实例:</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 获取Unsafe实例      * @return      * @throws NoSuchFieldException      * @throws IllegalAccessException      */</span><span class="token keyword">public</span><span class="token keyword">static</span> Unsafe<span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span>IllegalAccessException<span class="token punctuation">{<!-- --></span>         Field field<span class="token operator">=</span> Unsafe<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"theUnsafe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">(</span>Unsafe<span class="token punctuation">)</span>field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h3><a id="2unsafe_45" rel="nofollow"></a>2.unsafe创建对象</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">UnSafeDemo</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span> InstantiationException<span class="token punctuation">{<!-- --></span><span class="token comment">//2.创建对象</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span> InstantiationException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Book book<span class="token operator">=</span><span class="token punctuation">(</span>Book<span class="token punctuation">)</span> unsafe<span class="token punctuation">.</span><span class="token function">allocateInstance</span><span class="token punctuation">(</span>Book<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t"</span><span class="token operator">+</span>book<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span><span class="token class-name">Book</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token keyword">private</span> Integer price<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token function">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         name<span class="token operator">=</span><span class="token string">"三国演义"</span><span class="token punctuation">;</span>         price<span class="token operator">=</span><span class="token number">77</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> Integer<span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> price<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setPrice</span><span class="token punctuation">(</span>Integer price<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token operator">=</span> price<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>打印结果为null null，因为：</p> <p><strong>allocateInstance</strong>方法用于创建一个类的实例，但是不会调用这个实例的构造方法，如果这个类还未被初始化，则初始化这个类。</p> <h3><a id="3__93" rel="nofollow"></a>3. 直接内存操作</h3> <pre><code class="prism language-java"><span class="token comment">// 分配内存(堆外)</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">long</span><span class="token function">allocateMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重新分配内存</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">long</span><span class="token function">reallocateMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 内存初始化</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">setMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var3<span class="token punctuation">,</span><span class="token keyword">byte</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 内存复制</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">copyMemory</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">,</span><span class="token keyword">long</span> var5<span class="token punctuation">,</span><span class="token keyword">long</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 清除内存</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">freeMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>我们可以调用<code>allocateMemory</code>方法为进程分配堆外的本地内存，但因为这部分内存不受JVM管辖范围，因此需要<code>freeMemory</code>方法进行回收</p> <h3><a id="4_CAS_110" rel="nofollow"></a>4. CAS操作</h3> <p>JUC中大量运用了CAS操作，CAS操作是juc包的基础。Unsafe中提供了int,long和CAS即Compare and Swap，是一种无锁化的算法，如果非要说是一种锁的化，那就是乐观锁，只要在操作数据的时候才会进行比较更新，比悲观锁处理效率更高。</p> <p>参数1：要修改的对象</p> <p>参数2: 偏移量</p> <p>参数3:期望值oldValue</p> <p>参数4: 更新的值newValue</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">,</span> Object var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">,</span><span class="token keyword">int</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">long</span> var4<span class="token punctuation">,</span><span class="token keyword">long</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3><a id="5__130" rel="nofollow"></a>5. 异常抛出</h3> <p>使用Unsafe的throwException不需要再方法上抛出：</p> <pre><code class="prism language-java">unsafe<span class="token punctuation">.</span><span class="token function">throwException</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3><a id="6_138" rel="nofollow"></a>6.线程相关</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">unpark</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">monitorEnter</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">monitorExit</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">tryMonitorEnter</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>LockSupport中使用了park和unpark：</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">park</span><span class="token punctuation">(</span>Object blocker<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Thread t<span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setBlocker</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> blocker<span class="token punctuation">)</span><span class="token punctuation">;</span>         UNSAFE<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token number">0</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setBlocker</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>线程需要阻塞时，调用park()方法，线程需要继续运行时，调用unpark()方法<br /><strong>monitorEnter:</strong><br /> 锁定对象，必须通过<code>monitorExit</code>方法才能解锁。可重入的。<br /> 加了<code>synchronized</code> 关键字的代码段，生成的字节码文件会多出<code>monitorenter</code> 和<code>monitorexit</code> 两条指令</p> <h3><a id="7_putXXX_getXXX_168" rel="nofollow"></a>7. putXXX 和getXXX</h3> <p>以int为例：</p> <ul> <li> <p><strong>getInt</strong>：</p> <ul> <li>第一个参数：读取对象</li> <li>第二个参数：内存偏移地址</li> </ul> </li> <li> <p><strong>putInt</strong>：</p> <ul> <li>第一个参数：修改对象</li> <li>第二个参数：内存偏移地址</li> <li>第三个参数：要修改的新值</li> </ul> </li> </ul> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">int</span><span class="token function">getInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">getAndPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> InstantiationException<span class="token punctuation">,</span> NoSuchFieldException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Book book<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Field field<span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         unsafe<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>book<span class="token punctuation">,</span>unsafe<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"新三国演义"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//新三国演义</span><span class="token punctuation">}</span></code></pre> <p><strong>unsafe.objectFieldOffset(field):</strong> 获取对应字段的内存偏移地址</p> <h3><a id="8_volatile_199" rel="nofollow"></a>8. volatile相关</h3> <p><strong>getXXXVolatile</strong>：以volatile的形式读取内存偏移地址为var2的对象的值。</p> <p><strong>putXXXVolatile</strong>：以volatile的形式修改内存偏移地址为var2的对象的值</p> <p>既然使用了volatile，就说明该操作保证了有序性和可见性。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span> Object<span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putObjectVolatile</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3><a id="9order_213" rel="nofollow"></a>9.order相关</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedLong</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">long</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>保证了有序性的写和修改。仅保证了有序性。因此不保证可见性和原子性。</p> </div> 			
                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/news/article-38022.htm">动物疫苗注射后多久产生抗体（动物打疫苗后多久能杀了吃）</a></p>
                                                        <p>下一个：<a href="/news/article-38509.htm">宠物粮食行业发展前景如何知乎论文 宠物粮食行业发展前景如何知乎论文</a></p>
                                                    </div>

                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-27-free-high-speed-nodes.htm" title="11月27日 | Stair Node节点订阅每天更新18.1M/S免费节点订阅链接，付费节点订阅推荐">11月27日 | Stair Node节点订阅每天更新18.1M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-31-free-high-speed-nodes.htm" title="12月31日 | Stair Node节点订阅每天更新20M/S免费节点订阅链接，付费节点订阅推荐">12月31日 | Stair Node节点订阅每天更新20M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-free-subscribe-node.htm" title="12月29日 | Stair Node节点订阅每天更新19.3M/S免费节点订阅链接，付费节点订阅推荐">12月29日 | Stair Node节点订阅每天更新19.3M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-free-node-subscribe-links.htm" title="12月21日 | Stair Node节点订阅每天更新20M/S免费节点订阅链接，付费节点订阅推荐">12月21日 | Stair Node节点订阅每天更新20M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-37040.htm" title="猫咪打疫苗多少钱一支（猫咪打疫苗多少钱一支啊）">猫咪打疫苗多少钱一支（猫咪打疫苗多少钱一支啊）</a></li>
                        <li class="py-2"><a href="/news/article-37517.htm" title="Python中将字典转为成员变量详解">Python中将字典转为成员变量详解</a></li>
                        <li class="py-2"><a href="/news/article-26118.htm" title="郑州狗粮批发（郑州狗粮市场）">郑州狗粮批发（郑州狗粮市场）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-free-node-subscribe.htm" title="1月4日 | Stair Node节点订阅每天更新19.7M/S免费节点订阅链接，付费节点订阅推荐">1月4日 | Stair Node节点订阅每天更新19.7M/S免费节点订阅链接，付费节点订阅推荐</a></li>
                        <li class="py-2"><a href="/news/article-21064.htm" title="宠物领养协议需要身份证复印件吗怎么写的呢（宠物领养协议需要身份证复印件吗怎么写的呢英文）">宠物领养协议需要身份证复印件吗怎么写的呢（宠物领养协议需要身份证复印件吗怎么写的呢英文）</a></li>
                        <li class="py-2"><a href="/news/article-27535.htm" title="天照爱宠动物医院简介（天照宠物医院大兴店）">天照爱宠动物医院简介（天照宠物医院大兴店）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer ftco-section">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        Stair Node免费订阅官网 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg></div>
    <script src="/assets/website/js/frontend/stairnode/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/popper.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/stairnode/scrollax.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
    <script src="/assets/website/js/frontend/stairnode/google-map.js"></script>
    <script src="/assets/website/js/frontend/stairnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>